// Script para probar directamente la API de disponibilidad
async function testAvailabilityAPI() {
  try {
    console.log("üß™ PROBANDO API DE DISPONIBILIDAD")
    console.log("=" * 40)

    const teacherId = "30bbadcc-b90c-4349-bc2d-f1ea56b22827" // profesor@robotipa.com
    const testDate = "2025-08-11" // Lunes que deber√≠a estar disponible

    console.log(`üë®‚Äçüè´ Profesor ID: ${teacherId}`)
    console.log(`üìÖ Fecha de prueba: ${testDate}`)

    // 1. Probar disponibilidad general (sin fecha)
    console.log("\n1Ô∏è‚É£ DISPONIBILIDAD GENERAL:")
    const generalResponse = await fetch(`http://localhost:3000/api/live-sessions/availability?teacherId=${teacherId}`)
    
    if (!generalResponse.ok) {
      console.error(`‚ùå Error general: ${generalResponse.status} ${generalResponse.statusText}`)
      const errorText = await generalResponse.text()
      console.error("Error details:", errorText)
    } else {
      const generalData = await generalResponse.json()
      console.log("‚úÖ Disponibilidad general:", JSON.stringify(generalData, null, 2))
    }

    // 2. Probar disponibilidad para fecha espec√≠fica
    console.log(`\n2Ô∏è‚É£ DISPONIBILIDAD PARA ${testDate}:`)
    const specificResponse = await fetch(`http://localhost:3000/api/live-sessions/availability?teacherId=${teacherId}&date=${testDate}`)
    
    if (!specificResponse.ok) {
      console.error(`‚ùå Error espec√≠fico: ${specificResponse.status} ${specificResponse.statusText}`)
      const errorText = await specificResponse.text()
      console.error("Error details:", errorText)
    } else {
      const specificData = await specificResponse.json()
      console.log("‚úÖ Slots disponibles:", JSON.stringify(specificData, null, 2))
      console.log(`üìä Total slots: ${specificData.length}`)
    }

    // 3. Verificar el d√≠a de la semana del testDate
    const testDateObj = new Date(testDate + "T00:00:00")
    const dayOfWeek = testDateObj.getDay()
    const dayNames = ['Domingo', 'Lunes', 'Martes', 'Mi√©rcoles', 'Jueves', 'Viernes', 'S√°bado']
    console.log(`\nüìÜ ${testDate} es ${dayNames[dayOfWeek]} (dayOfWeek: ${dayOfWeek})`)

  } catch (error) {
    console.error("‚ùå Test Error:", error)
  }
}

// Ejecutar solo si es llamado directamente
if (require.main === module) {
  testAvailabilityAPI()
}

export { testAvailabilityAPI }