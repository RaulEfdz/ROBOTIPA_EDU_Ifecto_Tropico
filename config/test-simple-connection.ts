/**
 * Prueba de conexi√≥n entre modules.ts y module-activation.ts
 * Ejecutar con: npx tsx config/test-simple-connection.ts
 */

import { isModuleActiveForRole, activateModuleForRole, activateModulesAfterPayment } from './module-activation';
import { isActive, activate, getActiveModules, getInactiveModules } from './modules';

console.log('üîó Probando conexi√≥n entre archivos simple y complejo...\n');

// Test 1: Verificar que ambos archivos dan el mismo resultado
console.log('üìã Test 1: Verificaci√≥n de sincronizaci√≥n');
console.log('Estado inicial de m√≥dulos para TEACHER:');
console.log(`  protocols (simple): ${isActive('teacher', 'protocols')}`);
console.log(`  protocols (complejo): ${isModuleActiveForRole('teacher', 'protocols')}`);
console.log(`  custom_sessions (simple): ${isActive('teacher', 'custom_sessions')}`);
console.log(`  custom_sessions (complejo): ${isModuleActiveForRole('teacher', 'custom_sessions')}`);
console.log('');

// Test 2: Activar desde el sistema simple
console.log('‚ö° Test 2: Activando desde sistema simple');
activate('teacher', 'protocols');
console.log('Despu√©s de activate("teacher", "protocols"):');
console.log(`  protocols (simple): ${isActive('teacher', 'protocols')}`);
console.log(`  protocols (complejo): ${isModuleActiveForRole('teacher', 'protocols')}`);
console.log('');

// Test 3: Activar desde el sistema complejo
console.log('üîß Test 3: Activando desde sistema complejo');
activateModuleForRole('teacher', 'custom_sessions');
console.log('Despu√©s de activateModuleForRole("teacher", "custom_sessions"):');
console.log(`  custom_sessions (simple): ${isActive('teacher', 'custom_sessions')}`);
console.log(`  custom_sessions (complejo): ${isModuleActiveForRole('teacher', 'custom_sessions')}`);
console.log('');

// Test 4: Activar m√∫ltiples m√≥dulos
console.log('üì¶ Test 4: Activaci√≥n m√∫ltiple');
console.log('M√≥dulos activos antes:', getActiveModules('admin'));
activateModulesAfterPayment('admin', ['user_management', 'analytics']);
console.log('M√≥dulos activos despu√©s:', getActiveModules('admin'));
console.log('');

// Test 5: Ver m√≥dulos disponibles vs activos
console.log('üìä Test 5: Resumen por rol');
const roles = ['teacher', 'admin', 'student'] as const;

roles.forEach(role => {
  const active = getActiveModules(role);
  const inactive = getInactiveModules(role);
  console.log(`${role.toUpperCase()}:`);
  console.log(`  ‚úÖ Activos (${active.length}): ${active.join(', ')}`);
  console.log(`  ‚ùå Inactivos (${inactive.length}): ${inactive.join(', ')}`);
  console.log('');
});

console.log('‚úÖ ¬°Conexi√≥n funcionando correctamente!');